{"version":3,"file":"burger-btn/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AACmB;AACK;AAAA;AAE9C,SAASK,IAAIA,CAACC,KAAK,EAAE;EACnC,MAAM;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAGF,KAAK;EAC3C,oBACCF,sDAAA;IAAA,GAASH,sEAAa,CAAC,CAAC;IAAAQ,QAAA,eACvBL,sDAAA,CAACF,sEAAgB;MAChBQ,KAAK,EAAC,6BAA6B;MACnCH,UAAU,EAAEA;IAAW,CACvB;EAAC,CACE,CAAC;AAER;;;;;;;;;;ACdA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNsD;AAC5B;AACU;AAEpCI,oEAAiB,CAACC,6CAAa,EAAE;EAChCE,IAAI,EAAET,6CAAIA;AACX,CAAC,CAAC,C","sources":["webpack://presswind-blocks/./src/burger-btn/edit.js","webpack://presswind-blocks/external window [\"wp\",\"blockEditor\"]","webpack://presswind-blocks/external window [\"wp\",\"blocks\"]","webpack://presswind-blocks/external window [\"wp\",\"i18n\"]","webpack://presswind-blocks/external window [\"wp\",\"serverSideRender\"]","webpack://presswind-blocks/external window \"ReactJSXRuntime\"","webpack://presswind-blocks/webpack/bootstrap","webpack://presswind-blocks/webpack/runtime/compat get default export","webpack://presswind-blocks/webpack/runtime/define property getters","webpack://presswind-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://presswind-blocks/webpack/runtime/make namespace object","webpack://presswind-blocks/./src/burger-btn/index.js"],"sourcesContent":["import { __ } from \"@wordpress/i18n\";\nimport { useBlockProps } from \"@wordpress/block-editor\";\nimport ServerSideRender from \"@wordpress/server-side-render\";\n\nexport default function Edit(props) {\n\tconst { attributes, setAttributes } = props;\n\treturn (\n\t\t<div {...useBlockProps()}>\n\t\t\t<ServerSideRender\n\t\t\t\tblock=\"presswind-blocks/burger-btn\"\n\t\t\t\tattributes={attributes}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\nimport Edit from \"./edit\";\nimport metadata from \"./block.json\";\n\nregisterBlockType(metadata.name, {\n\tedit: Edit,\n});\n"],"names":["__","useBlockProps","ServerSideRender","jsx","_jsx","Edit","props","attributes","setAttributes","children","block","registerBlockType","metadata","name","edit"],"sourceRoot":""}